{"version":3,"sources":["Components/Footerback.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","Containers/Registration.js"],"names":["Footerback","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","Component","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","Registration","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","email","asal","amount","countrycode","phone","password","confirm","passlength","check","match","matchpassword","data","loading","ticket","showupload","kaos","file","selected","load","_inputName","bind","assertThisInitialized","_inputEmail","_handleSubmit","_inputPassword","_inputConfirm","_countryCode","_phone","_asal","_amount","_kaos","_uploadKtm","e","setState","target","files","console","log","fn","preventDefault","telp","doregister","self","args","arguments","apply","err","undefined","prevProps","prevState","length","code","react_default","style","width","react_router_dom","connect","UserReducer","errmsg","dispatch","ktm","doRegister","doLogout"],"mappings":"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","file":"static/js/5.42de07f1.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Footerback extends React.Component{\n    render(){\n        return(\n            <div className=\"fixed-bottom py-3 shadow\">\n                <div className=\"d-flex justify-content-center\">\n                <Link to=\"/\" className=\"back-link\"><i className=\"fas fa-arrow-circle-left mr-1\"></i> Halaman Beranda</Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Footerback;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\nimport { connect } from 'react-redux';\n// import EmailInput from '../Components/EmailInput';\n// import gnome from '../assets/2019_logo.jpeg';\nimport { Link } from 'react-router-dom';\nimport Footerback from '../Components/Footerback';\n// import Buttonsubmit from '../Components/Buttonsubmit';\nimport { doRegister,doLogout } from '../Redux/action/userAction';\n// import PhoneInput from '../Components/PhoneInput';\nclass Registration extends React.Component{\n    constructor(props){\n        super();\n\n        this.state = {\n            name:'',\n            email:'',\n            asal:'',\n            amount:'100000',\n            countrycode: '',\n            phone:'',\n            password:'',\n            confirm:'',\n            passlength:{\n                check:false,\n                match:false\n            },\n            matchpassword:{\n                check:false,\n                match:false\n            },\n            data:'',\n            loading:false,\n            ticket: 1,\n            showupload: false,\n            kaos:'M',\n            file:{\n                selected:'',\n                load: 0\n            }\n            \n        }\n\n        this._inputName = this._inputName.bind(this);\n        this._inputEmail = this._inputEmail.bind(this);\n        this._handleSubmit = this._handleSubmit.bind(this);\n        this._inputPassword = this._inputPassword.bind(this);\n        this._inputConfirm = this._inputConfirm.bind(this);\n        this._countryCode = this._countryCode.bind(this)\n        this._phone = this._phone.bind(this)\n        this._asal = this._asal.bind(this)\n        this._amount = this._amount.bind(this)\n        this._kaos = this._kaos.bind(this)\n        this._uploadKtm = this._uploadKtm.bind(this)\n\n    }\n\n    _uploadKtm(e){\n        // console.log(e.target.files[0])\n        this.setState({\n            file:{\n                selected:e.target.files[0],\n                load: 0\n            }\n        })\n\n        console.log(e.target.files[0])\n    }\n\n    _kaos(e){\n        this.setState({\n            kaos: e.target.value\n        })\n    }\n    _amount(e){\n        console.log(e.target.value)\n        if(e.target.value === '1'){\n            this.setState({\n                amount:100000,\n                ticket: 1,\n                showupload: false\n            })\n        }\n        else if(e.target.value === '2'){\n            this.setState({\n                amount:50000,\n                ticket: 2,\n                showupload: true\n            })\n        }\n        \n    }\n    _asal(e){\n        this.setState({\n            asal: e.target.value\n        })\n    }\n\n    _inputName(e){\n        this.setState({\n            name:e.target.value\n        })\n    }\n    _inputEmail(e){\n        this.setState({\n            email:e.target.value\n        })\n    }\n\n    async _handleSubmit(e){\n        e.preventDefault();\n        if(this.state.matchpassword.match){\n            const telp = this.state.countrycode+this.state.phone\n            this.props.doregister(this.state.name,this.state.email,telp,this.state.password,this.state.asal,this.state.amount,this.state.kaos,this.state.ticket,this.state.file.selected)\n        }\n\n    }\n    \n    _inputPassword(e){\n        this.setState({\n            password:e.target.value\n        })\n    }\n    _inputConfirm(e){       \n        this.setState({\n            confirm:e.target.value\n        })\n    }\n    \n    componentDidUpdate(prevProps,prevState){\n\n        if(prevState.password !== this.state.password){\n            if(this.state.password.length < 8 ){\n                this.setState({\n                    passlength:{\n                        check:true\n                    }\n                })\n            }\n            else{\n                this.setState({\n                    passlength:{\n                        check:true,\n                        match:true\n                    }\n                })\n            }\n        }\n\n\n        if(prevState.confirm !== this.state.confirm){\n            \n            if(this.state.password === this.state.confirm){\n                this.setState({\n                    matchpassword:{\n                        check:true,\n                        match:true\n                    }\n                })\n            }\n            else{\n                this.setState({\n                    matchpassword:{\n                        check:true\n                    }\n                })\n            }\n        }\n    }\n\n    _countryCode(code){\n        this.setState({\n            countrycode: code\n        })\n    }\n    \n    _phone(phone){\n        this.setState({\n            phone: phone\n        })\n    }\n    \n    \n\n    render(){  \n        console.log(this.state.kaos)\n        return(\n            <div className=\"Page mb-5 mt-3\">\n                <div className=\"container py-3\">\n                    <h1>Registrasi</h1>\n                    <hr/>\n                    <div className=\"row\">\n                        {/*<div className=\"alert alert-warning text-center registration-banner\">\n                            <span className=\"text-registration\"><strong>Special Note:</strong></span><br/>\n                            This registration form is only for Indonesian citizens. If you are from outside Indonesia, please register by sending an email to <br/>\n                            <strong><a className=\"text-dark\" target=\"__blank\" href=\"mailto:humas@gnome.id?subject=GNOME.Asia Registration\">humas@gnome.id</a></strong> with the subject <strong>\"GNOME.Asia Registration\"</strong>. The email at least should contains your identity incuding first and last name, gender (not mandatory), country, and t-shirt size.\n                        </div>*/}\n                        <div className=\"alert alert-warning text-center registration-banner\" style={ {width: 100 + \"%\"} }>\n                            <h2>We are closed</h2>\n                                <span>Sudah punya akun?</span>\n                                <Link className=\"text-registration ml-2\" to=\"/login\">Masuk</Link>\n                        </div>\n                    </div>\n                    {/*\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <div className=\"px-5\">\n                                <img src={gnome} className=\"img-fluid\" alt=\"GNOME Asia Summit 2019\" />\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 pt-5\">\n                            {this.props.error ?  <div className=\"text-danger mb-3\"><b><i className=\"far fa-times-circle mr-3\"></i> {this.props.error} - {this.props.errmsg}</b></div>:null}\n                            <form onSubmit={this._handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name\">Nama Lengkap</label>\n                                    <input id=\"name\" type=\"Text\" className=\"form-control\" \n                                    placeholder=\"Gatot Kaca\"\n                                    value={this.state.name} \n                                    onChange={this._inputName}\n                                    required/>\n                                    \n                                </div>\n                                <EmailInput \n                                    value={this.state.email}\n                                    onChangeValue={this._inputEmail}\n                                />\n                                <PhoneInput\n                                    countrycode={this.state.countrycode}\n                                    phone={this.state.phone}\n                                    onChangeCode={this._countryCode}\n                                    onChangePhone={this._phone}\n                                />\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"asal\">Nama Instansi/Sekolah/Personal</label>\n                                    <input id=\"asal\" value={this.state.asal} onChange={this._asal} className=\"form-control\" placeholder=\"Universitas Gatot Kaca\" required/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <span>Jenis Tiket</span>\n                                    <br/><br/>\n                                    <div className=\"form-check form-check-inline ml-3\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"umum\" value=\"1\" onChange={this._amount} defaultChecked/>\n                                        <label className=\"form-check-label\" htmlFor=\"umum\">Umum - Rp100.000,-</label>\n                                    </div>\n                                    <br/>\n                                    <div className=\"form-check form-check-inline ml-3\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"mahasiswa\" value=\"2\" onChange={this._amount}/>\n                                        <label className=\"form-check-label\" htmlFor=\"mahasiswa\">Mahasiswa - Rp50.000,-</label>\n                                    </div>\n                                    <div className={this.state.showupload ? null : 'd-none'}>\n                                        <div className=\"form-group mt-3 ml-3\">\n                                            <label htmlFor=\"filektm\">Unggah Kartu Pelajar</label>\n                                            <input type=\"file\" className=\"form-control-file\" id=\"filektm\"  onChange={this._uploadKtm}/>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <span>Ukuran Kaos</span>\n                                    <br/><br/>\n                                    <div className=\"form-check form-check-inline ml-3\">\n                                        <input className=\"form-check-input\" type=\"radio\" id=\"sizem\" name=\"kaos\" value=\"M\" onChange={this._kaos} defaultChecked/>\n                                        <label className=\"form-check-label\" htmlFor=\"sizem\">M</label>\n                                    </div>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"radio\" id=\"sizel\" name=\"kaos\" value=\"L\" onChange={this._kaos}/>\n                                        <label className=\"form-check-label\" htmlFor=\"sizel\">L</label>\n                                    </div>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"radio\" id=\"sizexl\" name=\"kaos\" value=\"XL\" onChange={this._kaos}/>\n                                        <label className=\"form-check-label\" htmlFor=\"sizexl\">XL</label>\n                                    </div>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"radio\" id=\"sizaxxl\" name=\"kaos\" value=\"XXL\" onChange={this._kaos}/>\n                                        <label className=\"form-check-label\" htmlFor=\"sizaxxl\">XXL</label>\n                                    </div>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"radio\" id=\"sizexxxl\" name=\"kaos\" value=\"XXXL\" onChange={this._kaos}/>\n                                        <label className=\"form-check-label\" htmlFor=\"sizexxxl\">XXXL</label>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group mt-3\">\n                                    <label htmlFor=\"password\">Sandi</label>\n                                    <input id=\"password\" type=\"password\" \n                                    className={this.state.passlength.check ? (this.state.passlength.match ? \"form-control is-valid\":\"form-control is-invalid\") : \"form-control\"} \n                                    value={this.state.password}\n                                    onChange={this._inputPassword}\n                                    placeholder=\"········\"\n                                    required/>\n                                    {\n                                        this.state.passlength < 8 && this.state.passlength.check ? \n                                        null\n                                        :\n                                        <div className=\"invalid-feedback\">\n                                            Minimum 8 karakter\n                                        </div>\n\n                                    }\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"confirm\">Ketik Ulang Sandi</label>\n                                    <input id=\"confirm\" type=\"password\" \n                                    className={this.state.matchpassword.check ? (this.state.matchpassword.match ? \"form-control is-valid\" : \"form-control is-invalid\") :\"form-control\"}\n                                    value={this.state.confirm}\n                                    onChange={this._inputConfirm}\n                                    placeholder=\"········\"\n                                    required/>\n                                    {\n                                        this.state.matchpassword.match && this.state.matchpassword.check ? \n                                        <div className=\"valid-feedback\">\n                                        Sandi Cocok\n                                        </div>\n                                        :\n                                        <div className=\"invalid-feedback\">\n                                            Tidak Cocok!\n                                        </div>\n                                    }\n                                </div>\n\n                                <Buttonsubmit \n                                    class=\"btn btn-block btn-primary btn-rounded btn-registration\"\n                                    text=\"Daftar\"\n                                    loading={this.props.loading}\n                                />\n                                \n                            </form>\n                            <br/>\n                            <div className=\"d-flex justify-content-center\">\n                                <span>Sudah punya akun?</span>\n                                <Link className=\"text-registration ml-2\" to=\"/login\">Masuk</Link>\n                            </div>\n                        </div>\n                    </div>\n                    */}\n                    <Footerback/>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nconst mapStateToProps = state => {\n    return{\n        name: state.UserReducer.name,\n        loading:state.UserReducer.loading,\n        error: state.UserReducer.error,\n        errmsg: state.UserReducer.errmsg\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        doregister: (name,email,phone,password,asal,amount,kaos,ticket,ktm) => dispatch(doRegister(name,email,phone,password,asal,amount,kaos,ticket,ktm)),\n        doLogout: () => dispatch(doLogout())\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Registration);\n"],"sourceRoot":""}